// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
    RAM64(in=in, load=lbit1, address=address[0..5], out=R1);
    RAM64(in=in, load=lbit2, address=address[0..5], out=R2);
    RAM64(in=in, load=lbit3, address=address[0..5], out=R3);
    RAM64(in=in, load=lbit4, address=address[0..5], out=R4);
    RAM64(in=in, load=lbit5, address=address[0..5], out=R5);
    RAM64(in=in, load=lbit6, address=address[0..5], out=R6);
    RAM64(in=in, load=lbit7, address=address[0..5], out=R7);
    RAM64(in=in, load=lbit8, address=address[0..5], out=R8);
    
    DMux8Way(in=load, sel=address[6..8], a=lbit1, b=lbit2, c=lbit3, d=lbit4,
             e=lbit5, f=lbit6, g=lbit7, h=lbit8);
    
    Mux8Way16(a=R1, b=R2, c=R3, d=R4, e=R5, f=R6, g=R7, h=R8, sel=address[6..8], out=R11);
        
    Mux8Way16(a=R11, b=R11, c=R11, d=R11, 
    e=R11, f=R11, g=R11, h=R11, sel=address[3..5], out=R111);
    
    Mux8Way16(a=R111, b=R111, c=R111, d=R111, 
    e=R111, f=R111, g=R111, h=R111, sel=address[0..2], out=out);
}